buildscript {
  repositories {
    maven { url 'https://maven.fabric.io/public' }
  }

  dependencies {
    classpath 'io.fabric.tools:gradle:1.30.0'
  }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
  jcenter()
  google()
  maven { url 'https://maven.fabric.io/public' }
  maven { url 'https://jitpack.io' }
}

android {
  compileSdkVersion 28
  buildToolsVersion '29.0.2'

  defaultConfig {
    applicationId "io.bloco.cardcase"
    minSdkVersion 21
    targetSdkVersion 28
    versionCode 26
    versionName "1.1.0"
    testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    resConfigs 'en', 'pt'

    def filesAuthorityValue = applicationId + ".files"
    manifestPlaceholders = [filesAuthority: filesAuthorityValue]
    buildConfigField "String", "FILES_AUTORITY", "\"${filesAuthorityValue}\""
    resValue "string", "google_nearby_api_key",
        getLocalProperties().getProperty("google_nearby_api_key")
  }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lintOptions {
    warningsAsErrors true
    disable 'DefaultLocale'
  }

  packagingOptions {
    exclude 'LICENSE'
    exclude 'LICENSE.txt'
    exclude 'NOTICE'
    exclude 'asm-license.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

dependencies {
  implementation 'androidx.appcompat:appcompat:1.1.0'
  implementation 'androidx.cardview:cardview:1.0.0'
  implementation 'com.google.android.material:material:1.0.0'
  implementation 'com.google.android.gms:play-services-nearby:17.0.0'
  implementation 'com.google.android.gms:play-services-appinvite:18.0.0'
  implementation 'com.google.android.gms:play-services-analytics:17.0.0'
  // Dagger
  implementation 'com.google.dagger:dagger:2.23'
  annotationProcessor 'com.google.dagger:dagger-compiler:2.23'
  // Logging
  implementation 'com.jakewharton.timber:timber:4.7.1'
  // View injection
  implementation 'com.jakewharton:butterknife:10.2.0'
  annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'
  // Database
  implementation 'com.j256.ormlite:ormlite-android:4.48'
  // Fonts
  implementation 'uk.co.chrisjenx:calligraphy:2.3.0'
  // Image loading
  implementation 'com.squareup.picasso:picasso:2.5.2'
  // Crop avatar
  implementation 'com.lyft:scissors:1.0.1'
  // JSON serialization
  implementation 'com.google.code.gson:gson:2.8.5'
  // Crash & usage monitoring
  implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
    transitive = true
  }
  // Generate fake data
  implementation 'com.github.blocoio:faker:1.2.7'
  // Testing
  testImplementation 'junit:junit:4.12'
  testImplementation 'org.mockito:mockito-core:2.10.0'
  androidTestImplementation 'junit:junit:4.12'
  androidTestImplementation 'androidx.annotation:annotation:1.1.0'
  androidTestImplementation 'androidx.test:runner:1.2.0'
  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  androidTestImplementation 'androidx.test:rules:1.2.0'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
  androidTestImplementation('androidx.test.espresso:espresso-contrib:3.2.0') {
    exclude module: 'recyclerview-v7'
    exclude module: 'support-v4'
  }
}

apply plugin: 'com.google.gms.google-services'

def getLocalProperties() {
  Properties properties = new Properties()
  properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
  return properties
}